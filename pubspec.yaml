name: boilerplate
description: A flutter boilerplate project created using MobX and Provider.

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# Read more about versioning at semver.org.
version: 1.0.0+1

environment:
  sdk: ">=2.6.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter
  flutter_cupertino_localizations: ^1.0.1

  get_it: ^3.1.0

  # flutter splash screen animation
  animated_splash: ^1.0.0

  # flutter_animation_library
  zerker: ^1.3.2

  # flutter grid
  flutter_staggered_grid_view: ^0.3.0

  #status bar color
  flutter_statusbarcolor: ^0.2.3

  #camera and gallery
  image_picker: ^0.6.2+3

  #permission_handler
  permission_handler: '^4.0.0'

  #FIREBASE_STORAGE
  firebase_storage: ^3.1.1

  #loader_animation
  loading_animations: ^2.1.0

  #weather api
  weather: ^0.9.5


# flutter_staggered_grid_view: "^0.2.7"
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^0.1.2

  # The following adds the shared pref as a dependency in your application
  shared_preferences: ^0.5.4+6

  # A composable, Future-based library for making HTTP requests.
  http: ^0.12.0+2

  easy_localization: ^1.3.1

  flutter_sticky_header: ^0.4.1

  percent_indicator: ^2.1.1+1
  page_transition: ^1.1.5
  flutter_animation_progress_bar: ^1.0.0
  circular_splash_transition: ^0.2.1
  rflutter_alert: ^1.0.3
  cloud_firestore: ^0.13.3
  firebase_auth: ^0.15.4
  #provider
  # provider: ^4.0.1

  # The following adds the launcher icon support to your application.
  # run below mentioned commands to generate launcher icons
  # flutter packages get
  # flutter packages pub run flutter_launcher_icons:main
  flutter_launcher_icons: ^0.7.4

  # Flogs, a powerful logging framework
  f_logs: ^1.2.1

  # MobX is a library for reactively managing the state of your applications. Use the power of
  # observables, actions, and reactions to supercharge your Dart and Flutter apps.
  mobx: ^0.3.9+3
  flutter_mobx: ^0.3.3+3
  mobx_codegen: ^0.3.10+1

  # An helper to easily exposes a value using InheritedWidget without having to write one.
  provider: ^4.0.2

  # String validation and sanitization for Dart. Dart 2-compatible version of validator
  validators: ^2.0.0+1

  # A powerful Http client for Dart
  dio: 2.1.13

  # A flexible widget for user notification.
  flushbar: ^1.9.1

  # create point on touch
  positioned_tap_detector: ^1.0.3


  # statusbar text color
  flutter_statusbar_text_color: ^0.1.2

  # Dependency injection
  inject:
    git:
      url: https://github.com/google/inject.dart.git
      path: package/inject

dependency_overrides:
  source_gen: 0.9.4+1
  analyzer: ^0.37.1
  intl: ^0.16.0


dev_dependencies:
  flutter_test:
    sdk: flutter

  json_serializable: ^3.2.3
  build_runner: ^1.7.2
  inject_generator:
    git:
      url: https://github.com/google/inject.dart.git
      path: package/inject_generator

flutter_icons:
  image_path: "assets/icons/ic_launcher.png"
  android: true
  ios: true


# For information on the generic Dart part of this file, see the
# following page: https://www.dartlang.org/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
  - assets/images/
  - assets/icons/
  - assets/locale/localization_en.json
  - assets/locale/localization_hi.json
  - assets/locale/en-US.json
  - assets/locale/ar-DZ.json
  - assets/images/previous-history-img/

  # -assets/previous-history-img/


  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.io/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.io/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
  - family: ProductSans
    fonts:
    - asset: assets/fonts/Product-Sans-Regular.ttf
    - asset: assets/fonts/Product-Sans-Italic.ttf
      style: italic
    - asset: assets/fonts/Product-Sans-Bold.ttf
      weight: 700

  # For details regarding fonts from package dependencies,
  # see https://flutter.io/custom-fonts/#from-packages
